// Test GQA expansion implementation in TensorLogic
//
// Verifies that broadcast_to + reshape correctly expands K/V from 4 to 32 heads

main {
    print("=== GQA Expansion Test (TensorLogic) ===\n")

    let model_path = env("HOME") + "/.llm/models/tinyllama-1.1b-chat-q4_0.gguf"
    let tokenizer_path = env("HOME") + "/.llm/tokenizers/tinyllama-tokenizer.json"

    let model = load_model(model_path)
    let tokenizer = load_tokenizer(tokenizer_path)

    // Get K weight and create K tensor
    let W_k_0 = get_tensor(model, "blk.0.attn_k.weight")
    print("K weight shape: ", shape(W_k_0))
    print("Expected: [256, 2048] = [4 heads * 64 dim, hidden_size]\n")

    // Get embedding for "Hello"
    let tokens = tokenize(tokenizer, "Hello", false)
    let embed_table = get_tensor(model, "token_embd.weight")
    let h = embedding(embed_table, tokens)  // [1, 2048]

    // Apply K projection
    let K = linear(h, W_k_0)  // [1, 256]
    print("K projection shape: ", shape(K))

    // Reshape to [1, 4, 64]
    let K_heads = reshape(K, [1.0, 4.0, 64.0])
    print("K_heads shape: ", shape(K_heads), "\n")

    // GQA expansion: 4 heads ‚Üí 32 heads
    print("=== GQA Expansion ===")
    print("Step 1: Reshape [1, 4, 64] ‚Üí [1, 4, 1, 64]")
    let K_reshaped = reshape(K_heads, [1.0, 4.0, 1.0, 64.0])
    print("  Shape: ", shape(K_reshaped))

    print("\nStep 2: Broadcast [1, 4, 1, 64] ‚Üí [1, 4, 8, 64]")
    let K_expanded = broadcast_to(K_reshaped, [1.0, 4.0, 8.0, 64.0])
    print("  Shape: ", shape(K_expanded))

    print("\nStep 3: Reshape [1, 4, 8, 64] ‚Üí [1, 32, 64]")
    let K_final = reshape(K_expanded, [1.0, 32.0, 64.0])
    print("  Shape: ", shape(K_final), "\n")

    print("‚úÖ GQA expansion completed")
    print("\nüìù Expected behavior:")
    print("  - KV head 0 ‚Üí Q heads 0-7")
    print("  - KV head 1 ‚Üí Q heads 8-15")
    print("  - KV head 2 ‚Üí Q heads 16-23")
    print("  - KV head 3 ‚Üí Q heads 24-31")

    print("\nüîç Verification:")
    print("  - Original K_heads: [1, 4, 64] with 4 distinct KV heads")
    print("  - Expanded K_final: [1, 32, 64] with each KV head replicated 8 times")
    print("  - This matches the expected GQA pattern from test_gqa_expansion.rs")
    print("\nüìä Note:")
    print("  - To numerically verify, would need to inspect tensor values")
    print("  - Current test confirms shape transformations are correct")
    print("  - The broadcast_to operation replicates each KV head 8 times")
}
